function reflection(i) {
    jQuery(document).ready(function() {
        jQuery(i.el).each(function() {
            var a = $(this),
                elH = a.innerHeight(),
                elW = a.innerWidth(),
                reflect = document.createElement('canvas'),
                addCanvas = true;
            if ($.browser.msie && $.browser.version < 9) {
                var b = "filter: progid:DXImageTransform.Microsoft.Chroma(color=" + i.IEbackground + ") flipV progid:DXImageTransform.Microsoft.Alpha(opacity=" + (i.opacity) * 100 + ", style=1, finishOpacity=0, startx=0, starty=0, finishx=0, finishy=" + (i.height * 100) + ");",
                    wrapIEStyle = "overflow: hidden; display: block; position: absolute; left: 0; top: " + parseInt(elH + i.distanceV) + "px;";
                addCanvas = false
            }
            if (a.is("img")) {
                var c = a.attr("class"),
                    elFloat = a.css("float"),
                    elMarginTop = a.css("marginTop"),
                    elMarginBottom = a.css("marginBottom"),
                    elMarginLeft = a.css("marginLeft"),
                    elMarginRight = a.css("marginRight"),
                    elPosition = a.css("position");
                a.css({
                    float: "none",
                    position: "static",
                    margin: "0"
                }).removeAttr("class");
                if (elPosition != "fixed" && elPosition != "absolute") elPosition = "relative";
                var d = a;
                if (a.parent().is("a")) d = a.parent();
                d.wrap("<span style='position: " + elPosition + ";  display: inline-block; float: " + elFloat + "; margin: " + elMarginTop + " " + elMarginRight + " " + elMarginBottom + " " + elMarginLeft + ";' class='" + c + "'></span>");
                if ($.browser.msie && $.browser.version < 8) {
                    d.parent().css({
                        display: "inline",
                        zoom: "1"
                    })
                }
                if (addCanvas == false) {
                    var e = a.parent();
                    if (e.is("a")) e = e.parent();
                    e.append("<span style='" + wrapIEStyle + "height: " + parseInt(elH * i.height) + "px;" + "width: " + elW + "px'>" + "<img src='" + a.attr("src") + "' style='zoom: 1;" + "background: " + i.IEbackground + ";" + "width:" + elW + "px;" + "height: " + elH + "px;" + b + "'/></span>")
                }
            } else {
                var f = a.css("fontFamily"),
                    optFontSize = a.css("fontSize"),
                    optFontColor = a.css("color"),
                    optFontWeight = a.css("fontWeight"),
                    optFontStyle = a.css("fontStyle"),
                    optText = a.text();
                if (addCanvas == false) {
                    a.append("<span style='" + wrapIEStyle + "background: " + i.IEbackground + ";" + b + "'>" + a.text() + "</span>")
                }
            }
            if (addCanvas == true) {
                if (!a.is("img")) a.append(reflect);
                else if (!a.parent().is("a")) a.parent().append(reflect);
                else a.parent().parent().append(reflect);
                reflect.width = elW;
                reflect.height = elH * i.height;
                reflect.style.position = "absolute";
                reflect.style.left = "0";
                reflect.style.top = elH + i.distanceV + "px";
                var g = reflect.getContext("2d");
                g.save();
                g.translate(0, elH);
                g.scale(1, -1);
                if (!a.is("img")) {
                    g.textBaseline = "top";
                    g.font = optFontStyle + " " + optFontWeight + " " + optFontSize + " " + f;
                    g.fillStyle = optFontColor;
                    g.fillText(a.text(), 0, 0)
                } else g.drawImage(this, 0, 0);
                g.restore();
                g.globalCompositeOperation = "destination-out";
                var h = g.createLinearGradient(0, 0, 0, elH * i.height);
                h.addColorStop(1, "rgba(0, 0, 0, 1.0)");
                h.addColorStop(0, "rgba(0, 0, 0, " + (1 - i.opacity) + ")");
                g.fillStyle = h;
                g.rect(0, 0, elW, elH);
                g.fill()
            }
            if (i.addHeight) {
                if (a.is("img")) {
                    a = a.parent();
                    if (a.is("a")) a = a.parent()
                }
                a.css("height", elH + i.distanceV + elH * i.height + "px")
            }
        })
    })
}